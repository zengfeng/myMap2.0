// // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
// ConstantSizeBuilderGrid.as
// Macromedia ActionScript Implementation of the Class ConstantSizeBuilderGrid
// Generated by Enterprise Architect
// Created on:      11-五月-2012 15:20:01
// Original author: ZengFeng
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // /
package worlds.auxiliarys.grids
{
    import flash.utils.Dictionary;
    import worlds.maps.layers.lands.LandUtil;


    /**
     * 用固定大小的单元格生成网格
     * @author ZengFeng
     * @version 1.0
     * @updated 11-五月-2012 15:22:38
     */
    public class ConstantSizeGenerateGrid extends AbstractGenerateGridStrategy
    {
        function ConstantSizeGenerateGrid()
        {
        }

        /**
         * 生成网格
         * 
         * @param width    网格总宽度
         * @param height    网格总高度
         * @param itemPresetWidth    单元格预设宽度
         * @param itemPresetHeight    单元格预设高度
         */
        override public function generateGrid(width : int, height : int, itemPresetWidth : int, itemPresetHeight : int, pushList : Vector.<GridItem> = null, itemDic : Dictionary = null) : Vector.<GridItem>
        {
            if (pushList == null) pushList = new Vector.<GridItem>();
            var key : String;
            var ccx : int = int(width / itemPresetWidth) - 1;
            var ccy : int = int(height / itemPresetHeight) - 1;
            var gridItem : GridItem;
            var gridItemPool : GridItemPool = GridItemPool.instance;
            var x : int;
            var y : int;
            var _x : int;
            var _y : int;
            for (y = 0; y <= ccy; y++ )
            {
                _y = y * itemPresetHeight;
                for (x = 0; x <= ccx; x++ )
                {
                    gridItem = gridItemPool.getObject();
                    gridItem.itemX = x;
                    gridItem.itemY = y;
                    gridItem.width = itemPresetWidth;
                    gridItem.height = itemPresetHeight;
                    gridItem.mapX = x * itemPresetWidth;
                    gridItem.mapY = _y;
                    gridItem.isNormalSize = true;
                    pushList.push(gridItem);
                    if (itemDic)
                    {
                        key = LandUtil.getGridItemKey(x, y);
                        itemDic[key] = gridItem;
                    }
                }
            }
            var overflowX : int = width % itemPresetWidth;
            var overflowY : int = height % itemPresetHeight ;
            if (overflowX != 0)
            {
                x = ccx + 1;
                _x = x * itemPresetWidth;
                for (y = 0; y <= ccy; y++ )
                {
                    gridItem = gridItemPool.getObject();
                    gridItem.itemX = x;
                    gridItem.itemY = y;
                    gridItem.width = overflowX;
                    gridItem.height = itemPresetHeight;
                    gridItem.mapX = _x;
                    gridItem.mapY = y * itemPresetHeight;
                    gridItem.isNormalSize = false;
                    pushList.push(gridItem);
                    if (itemDic)
                    {
                        key = LandUtil.getGridItemKey(x, y);
                        itemDic[key] = gridItem;
                    }
                }
            }

            if (overflowY != 0)
            {
                y = ccy + 1;
                _y = y * itemPresetHeight;
                for (x = 0; x <= ccx; x++ )
                {
                    gridItem = gridItemPool.getObject();
                    gridItem.itemX = x;
                    gridItem.itemY = y;
                    gridItem.width = itemPresetWidth;
                    gridItem.height = overflowY;
                    gridItem.mapX = x * itemPresetWidth;
                    gridItem.mapY = _y;
                    gridItem.isNormalSize = false;
                    pushList.push(gridItem);
                    if (itemDic)
                    {
                        key = LandUtil.getGridItemKey(x, y);
                        itemDic[key] = gridItem;
                    }
                }
            }

            if (overflowX != 0 && overflowY != 0)
            {
                x = ccx + 1;
                y = ccy + 1;
                gridItem = gridItemPool.getObject();
                gridItem.itemX = x;
                gridItem.itemY = y;
                gridItem.width = overflowX;
                gridItem.height = overflowY;
                gridItem.mapX = x * itemPresetWidth;
                gridItem.mapY = y * itemPresetHeight;
                gridItem.isNormalSize = false;
                pushList.push(gridItem);
                if (itemDic)
                {
                    key = LandUtil.getGridItemKey(x, y);
                    itemDic[key] = gridItem;
                }
            }

            return pushList;
        }
    }
}